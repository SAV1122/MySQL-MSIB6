Advanced SELECTs
Worksheet 3

Nama	: SALMAN ALVARICY

SOAL 3.1

1.	Tampilkan produk yang asset nya diatas 20jt
MariaDB [dbtoko1]> SELECT SUM(harga_beli * stok) as total from produk; //menghitung total asset
MariaDB [dbtoko1]> SELECT * FROM produk WHERE harga_beli * stok > 20000000; ini yang betul

SELECT ...
2.	Tampilkan data produk beserta selisih stok dengan minimal stok
MariaDB [dbtoko1]> SELECT SUM(stok - min_stok) as selisih from produk;
3.	Tampilkan total asset produk secara keseluruhan
MariaDB [dbtoko1]> SELECT sum(stok) as total_asset from produk;
4.	Tampilkan data pelanggan yang lahirnya antara tahun 1980 sampai 1990
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE YEAR(tgl_lahir) BETWEEN 1999 AND 2004;
5.	Tampilkan data pelanggan yang lahirnya tahun 1998
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE YEAR(tgl_lahir)=1998;
6.	Tampilkan data pelanggan yang berulang tahun bulan agustus
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE MONTH(tgl_lahir)=08;
7.	Tampilkan data pelanggan : nama, tmp_lahir, tgl_lahir dan umur (selisih tahun sekarang dikurang tahun kelahiran)
MariaDB [dbtoko1]> SELECT nama, tmp_lahir, tgl_lahir, (YEAR(NOW())-YEAR(tgl_lahir)) AS umur FROM pelanggan;





SOAL 3.2

1.	Berapa jumlah pelanggan yang tahun lahirnya 1998
MariaDB [dbpos_sib6]> SELECT COUNT(*) AS tgl_lahir FROM pelanggan WHERE YEAR(tgl_lahir) = 1998;
2.	Berapa jumlah pelanggan perempuan yang tempat lahirnya di Jakarta
MariaDB [dbpos_sib6]> SELECT COUNT(*) AS jk, tmp_lahir FROM pelanggan WHERE jk = 'P' AND tmp_lahir = 'Jakarta';
3.	Berapa jumlah total stok semua produk yang harga jualnya dibawah 10rb
MariaDB [dbpos_sib6]> SELECT COUNT(stok) AS Total_stok FROM produk WHERE harga_jual < 10000;
4.	Ada berapa produk yang mempunyai kode awal K
MariaDB [dbpos_sib6]> SELECT COUNT(*) AS Total_Awalan_K FROM produk WHERE nama LIKE 'K%';
5.	Berapa harga jual rata-rata produk yang diatas 1jt
MariaDB [dbpos_sib6]> SELECT AVG(harga_jual) AS harga_rata2 FROM produk WHERE harga_jual > 1000000;
6.	Tampilkan jumlah stok yang paling besar
MariaDB [dbpos_sib6]> SELECT MAX(stok) AS stok_terbesar from produk;
7.	Ada berapa produk yang stoknya kurang dari minimal stok
MariaDB [dbpos_sib6]> SELECT COUNT(*) AS stok_kurang FROM produk WHERE stok < min_stok;
8.	Berapa total asset dari keseluruhan produk
MariaDB [dbpos_sib6]> SELECT SUM(harga_beli * stok) AS total_asset FROM produk;








SOAL 3.3

1.	Tampilkan data produk : id, nama, stok dan informasi jika stok telah sampai batas minimal atau kurang dari minimum stok dengan informasi ‘segera belanja’ jika tidak ‘stok aman’.
MariaDB [dbpos_sib6]> SELECT id, nama, stok,
   			 -> CASE
  			  -> WHEN stok <= min_stok THEN 'Segera belanja'
  			  -> ELSE 'Stok aman'
  			  -> END AS Keterangan_stok
   			 -> FROM produk;
2.	Tampilkan data pelanggan: id, nama, umur dan kategori umur : jika umur < 17 → ‘muda’ , 17-55 → ‘Dewasa’, selainnya ‘Tua’
MariaDB [dbpos_sib6]> SELECT id, nama, YEAR(NOW()) - YEAR(tgl_lahir) AS umur,
   			 -> CASE
    			-> WHEN YEAR(NOW()) - YEAR(tgl_lahir) < 17 THEN 'Muda'
    			-> WHEN YEAR(NOW()) - YEAR(tgl_lahir) >= 17 AND YEAR(NOW()) - YEAR(tgl_lahir) <= 55 THEN 'Dewasa'
   			 -> ELSE 'Tua'
   			 -> END AS kategori_umur
   			 -> FROM pelanggan;
3.	Tampilkan data produk: id, kode, nama, dan bonus untuk kode ‘TV01’ →’DVD Player’ , ‘K001’ → ‘Rice Cooker’ selain dari diatas ‘Tidak Ada’
MariaDB [dbpos_sib6]> SELECT id, kode, nama,
    			-> CASE
   			 -> WHEN kode = 'TV01' THEN 'DVD Player'
   			 -> WHEN kode = 'KOO1' THEN 'Rice Cooker'
  			  -> ELSE 'Tidak ada'
   			 -> END AS Bonus_kode
    			-> from produk;



SOAL 3.4

1.	Tampilkan data statistik jumlah tempat lahir pelanggan
MariaDB [dbpos_sib6]> SELECT tmp_lahir, COUNT(*) AS Statistik_pelanggan FROM pelanggan GROUP BY tmp_lahir;
2.	Tampilkan jumlah statistik produk berdasarkan jenis produk
MariaDB [dbpos_sib6]> SELECT nama, COUNT(*) AS Statistik_produk FROM produk GROUP BY nama;
3.	Tampilkan data pelanggan yang usianya dibawah rata usia pelanggan
MariaDB [dbpos_sib6]> SELECT id, nama, YEAR(NOW()) - YEAR(tgl_lahir) AS umur FROM pelanggan
-> WHERE YEAR(NOW()) - YEAR(tgl_lahir) < (SELECT AVG(YEAR(NOW()) - YEAR(tgl_lahir)) FROM pelanggan);
4.	Tampilkan data produk yang harganya diatas rata-rata harga produk
SELECT
    -> AVG(harga_jual) AS Harga_jual_rata_rata,
    -> AVG(harga_beli) AS Harga_beli_rata_rata
    -> FROM produk;
5.	Tampilkan data pelanggan yang memiliki kartu dimana iuran tahunan kartu diatas 90rb
MariaDB [dbpos_sib6]> SELECT * FROM pelanggan WHERE kartu_id > 90000;
6.	Tampilkan statistik data produk dimana harga produknya dibawah rata-rata harga produk secara keseluruhan
MariaDB [dbpos_sib6]> SELECT
    -> MIN(harga_beli) AS harga_beli_terendah,
    -> MAX(harga_jual) AS harga_jual_tertinggi,
    -> AVG(harga_beli) AS harga_beli_rata_rata,
    -> MIN(harga_jual) AS harga_jual_terendah,
    -> MAX(harga_jual) AS harga_jual_tertinggi,
    -> AVG(harga_jual) AS harga_jual_rata_rata,
    -> COUNT(*) AS jumlah_produk
    -> FROM produk
    -> WHERE harga_beli < (SELECT AVG(harga_beli) FROM produk)
    -> AND harga_jual < (SELECT AVG(harga_jual) FROM produk);
7.	Tampilkan data pelanggan yang memiliki kartu dimana diskon kartu yang diberikan diatas 3%
MariaDB [dbpos_sib6]> SELECT nama_pelanggan, nomor_kartu, jenis_kartu, diskon_kartu,
    -> SUM(diskon_kartu) AS total_diskon
    -> FROM pelanggan
    -> INNER JOIN kartu ON pelanggan.id_kartu = kartu.id_kartu
    -> WHERE diskon_kartu > 3
    -> GROUP BY nama_pelanggan, nomor_kartu, jenis_kartu, diskon_kartu
    -> ORDER BY diskon_kartu DESC;
